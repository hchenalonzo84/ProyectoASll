@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav d-flex align-items-center flex-row gap-3">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item d-flex d-flex align-items-center flex-row gap-3">


    </li>
        <!--
    <li class="nav-item d-flex d-flex align-items-center flex-row gap-3">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
          -->
    <li class="nav-item d-flex align-items-center flex-row gap-3">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">Cerrar Sesion</button>
        </form>
    </li>
       
}

else
{

    <li class="nav-item d-flex align-items-center flex-row gap-3">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
    </li>
    <li class="nav-item d-flex align-items-center flex-row gap-3">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesion</a>
    </li>
        
}

</ul>
